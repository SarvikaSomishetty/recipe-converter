{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Scale, Search, X, ChefHat } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport \"../pages/Conversionpage\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n;\nconst weightUnits = ['g', 'kg', 'oz', 'lb'];\nconst volumeUnits = ['ml', 'liter', 'tsp', 'tbsp', 'cup', 'glass'];\nconst allUnits = [...weightUnits, ...volumeUnits];\nconst ConversionForm = () => {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedIngredient, setSelectedIngredient] = useState('');\n  const [amount, setAmount] = useState('1');\n  const [fromUnit, setFromUnit] = useState('cup');\n  const [toUnit, setToUnit] = useState('g');\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // Fetch ingredients\n  useEffect(() => {\n    const fetchIngredients = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/foods`);\n        setIngredients(response.data);\n      } catch (err) {\n        console.error('Error fetching ingredients:', err);\n        setError('Failed to load ingredients');\n      }\n    };\n    fetchIngredients();\n  }, []);\n\n  // Normalize text by removing special characters and converting to lowercase\n  const normalizeText = text => text ? text.toLowerCase().replace(/[\\s,./-]/g, \"\") : \"\";\n  const filteredIngredients = searchTerm ? ingredients.filter(item => typeof item === 'string').filter(item => normalizeText(item).includes(normalizeText(searchTerm))) : [];\n\n  // Handle click outside dropdown\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setShowSuggestions(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Conversion handler\n  const handleConvert = async e => {\n    e.preventDefault();\n    setError(null);\n    setIsLoading(true);\n    if (!selectedIngredient || !amount) {\n      setError(\"Please fill all fields\");\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}/convert`, {\n        food: selectedIngredient,\n        quantity: parseFloat(amount),\n        from_unit: fromUnit,\n        to_unit: toUnit\n      });\n      setResult({\n        input: `${amount} ${fromUnit}`,\n        output: response.data.output,\n        ingredient: selectedIngredient\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Conversion failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n};\n_s(ConversionForm, \"VMTG6ACuJb7BEnSU7K7BPHkHjcw=\");\n_c = ConversionForm;\nexport default ConversionForm;\nvar _c;\n$RefreshReg$(_c, \"ConversionForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Scale","Search","X","ChefHat","motion","API_BASE_URL","process","env","REACT_APP_API_URL","weightUnits","volumeUnits","allUnits","ConversionForm","_s","ingredients","setIngredients","searchTerm","setSearchTerm","selectedIngredient","setSelectedIngredient","amount","setAmount","fromUnit","setFromUnit","toUnit","setToUnit","result","setResult","isLoading","setIsLoading","error","setError","showSuggestions","setShowSuggestions","dropdownRef","fetchIngredients","response","get","data","err","console","normalizeText","text","toLowerCase","replace","filteredIngredients","filter","item","includes","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleConvert","e","preventDefault","post","food","quantity","parseFloat","from_unit","to_unit","input","output","ingredient","_err$response","_err$response$data","_c","$RefreshReg$"],"sources":["C:/Users/somis/OneDrive/Documents/Desktop/FOOD/Precise_Baking/frontend/src/components/ConversionForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Scale, Search, X, ChefHat } from 'lucide-react';\r\nimport { motion } from 'framer-motion';\r\nimport \"../pages/Conversionpage\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";;\r\nconst weightUnits = ['g', 'kg', 'oz', 'lb'];\r\nconst volumeUnits = ['ml', 'liter', 'tsp', 'tbsp', 'cup', 'glass'];\r\nconst allUnits = [...weightUnits, ...volumeUnits];\r\n\r\nconst ConversionForm = () => {\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedIngredient, setSelectedIngredient] = useState('');\r\n  const [amount, setAmount] = useState('1');\r\n  const [fromUnit, setFromUnit] = useState('cup');\r\n  const [toUnit, setToUnit] = useState('g');\r\n  const [result, setResult] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  // Fetch ingredients\r\n  useEffect(() => {\r\n    const fetchIngredients = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/foods`);\r\n        setIngredients(response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching ingredients:', err);\r\n        setError('Failed to load ingredients');\r\n      }\r\n    };\r\n    fetchIngredients();\r\n  }, []);\r\n\r\n  // Normalize text by removing special characters and converting to lowercase\r\n  const normalizeText = (text) => \r\n    text ? text.toLowerCase().replace(/[\\s,./-]/g, \"\") : \"\";\r\n  \r\n\r\n  const filteredIngredients = searchTerm\r\n  ? ingredients\r\n      .filter(item => typeof item === 'string')\r\n      .filter(item => normalizeText(item).includes(normalizeText(searchTerm)))\r\n  : [];\r\n\r\n\r\n\r\n\r\n  // Handle click outside dropdown\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setShowSuggestions(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  // Conversion handler\r\n  const handleConvert = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setIsLoading(true);\r\n\r\n    if (!selectedIngredient || !amount) {\r\n      setError(\"Please fill all fields\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/convert`, {\r\n        food: selectedIngredient,\r\n        quantity: parseFloat(amount),\r\n        from_unit: fromUnit,\r\n        to_unit: toUnit,\r\n      });\r\n\r\n      setResult({\r\n        input: `${amount} ${fromUnit}`,\r\n        output: response.data.output,\r\n        ingredient: selectedIngredient\r\n      });\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || \"Conversion failed. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  \r\n};\r\n\r\nexport default ConversionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}