{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somis\\\\OneDrive\\\\Documents\\\\Desktop\\\\FOOD\\\\finalfront\\\\src\\\\components\\\\ConversionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst units = [\"cup\", \"tablespoon\", \"teaspoon\", \"glass\"];\nconst ConversionForm = ({\n  food,\n  onConvert\n}) => {\n  _s();\n  const [quantity, setQuantity] = useState(\"\");\n  const [unit, setUnit] = useState(units[0]);\n  const handleConversion = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/convert\", {\n        food,\n        quantity,\n        unit\n      });\n      onConvert(response.data);\n    } catch (error) {\n      console.error(\"Conversion error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Quantity (e.g., 1, 1/2, 1/4)\",\n      value: quantity,\n      onChange: e => setQuantity(e.target.value),\n      style: {\n        width: \"40%\",\n        padding: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: unit,\n      onChange: e => setUnit(e.target.value),\n      children: units.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: u,\n        children: u\n      }, u, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConversion,\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversionForm, \"CwFs/Hcn4C9ir+C0FtZ2aTQiz9w=\");\n_c = ConversionForm;\nexport default ConversionForm;\nvar _c;\n$RefreshReg$(_c, \"ConversionForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","units","ConversionForm","food","onConvert","_s","quantity","setQuantity","unit","setUnit","handleConversion","response","post","data","error","console","children","type","placeholder","value","onChange","e","target","style","width","padding","fileName","_jsxFileName","lineNumber","columnNumber","map","u","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/somis/OneDrive/Documents/Desktop/FOOD/finalfront/src/components/ConversionForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst units = [\"cup\", \"tablespoon\", \"teaspoon\", \"glass\"];\r\n\r\nconst ConversionForm = ({ food, onConvert }) => {\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [unit, setUnit] = useState(units[0]);\r\n\r\n  const handleConversion = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/convert\", {\r\n        food,\r\n        quantity,\r\n        unit\r\n      });\r\n      onConvert(response.data);\r\n    } catch (error) {\r\n      console.error(\"Conversion error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Quantity (e.g., 1, 1/2, 1/4)\"\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value)}\r\n        style={{ width: \"40%\", padding: \"8px\" }}\r\n      />\r\n      <select value={unit} onChange={(e) => setUnit(e.target.value)}>\r\n        {units.map((u) => (\r\n          <option key={u} value={u}>{u}</option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleConversion} style={{ marginLeft: \"10px\" }}>\r\n        Convert\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversionForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAG,CAAC,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC;AAExD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,mCAAmC,EAAE;QACrET,IAAI;QACJG,QAAQ;QACRE;MACF,CAAC,CAAC;MACFJ,SAAS,CAACO,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,8BAA8B;MAC1CC,KAAK,EAAEb,QAAS;MAChBc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAM;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACF7B,OAAA;MAAQmB,KAAK,EAAEX,IAAK;MAACY,QAAQ,EAAGC,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAH,QAAA,EAC3Df,KAAK,CAAC6B,GAAG,CAAEC,CAAC,iBACX/B,OAAA;QAAgBmB,KAAK,EAAEY,CAAE;QAAAf,QAAA,EAAEe;MAAC,GAAfA,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT7B,OAAA;MAAQgC,OAAO,EAAEtB,gBAAiB;MAACa,KAAK,EAAE;QAAEU,UAAU,EAAE;MAAO,CAAE;MAAAjB,QAAA,EAAC;IAElE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCIH,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}