{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somis\\\\OneDrive\\\\Documents\\\\Desktop\\\\FOOD\\\\finalfront\\\\src\\\\components\\\\ConversionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Fuse from \"fuse.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\nconst units = [\"cup\", \"tablespoon\", \"teaspoon\", \"glass\"];\nconst ConversionForm = ({\n  onConvert\n}) => {\n  _s();\n  const [foodList, setFoodList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentIngredient, setCurrentIngredient] = useState(\"\");\n  const [amount, setAmount] = useState(\"1\");\n  const [measurement, setMeasurement] = useState(\"cup\");\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [error, setError] = useState(null);\n\n  // ✅ Fetch food list from backend\n  useEffect(() => {\n    axios.get(`${API_BASE_URL}/foods`).then(res => setFoodList(res.data)).catch(err => console.error(\"Error fetching foods:\", err));\n  }, []);\n\n  // ✅ Fuzzy search setup\n  const fuse = new Fuse(foodList, {\n    threshold: 0.4,\n    distance: 100\n  });\n  const suggestions = searchTerm ? fuse.search(searchTerm).map(result => result.item) : [];\n\n  // ✅ Select food from search suggestions\n  const handleIngredientSelect = ingredient => {\n    setCurrentIngredient(ingredient);\n    setSearchTerm(ingredient);\n    setShowSuggestions(false);\n  };\n\n  // ✅ Convert measurement request\n  const handleConvert = async e => {\n    e.preventDefault();\n    setError(null);\n    if (!currentIngredient || !amount || !measurement) {\n      setError(\"Please enter all fields.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}/convert`, {\n        food: currentIngredient,\n        quantity: amount,\n        unit: measurement\n      });\n      onConvert(response.data);\n    } catch (err) {\n      setError(\"Conversion failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: e => {\n        setSearchTerm(e.target.value);\n        setShowSuggestions(true);\n      },\n      placeholder: \"Search food...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), showSuggestions && suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suggestions.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleIngredientSelect(ingredient),\n        children: ingredient\n      }, ingredient, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: measurement,\n      onChange: e => setMeasurement(e.target.value),\n      children: units.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: u,\n        children: u\n      }, u, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvert,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversionForm, \"td3vpIlZ0cpqGOPDAcNNf2JGxVg=\");\n_c = ConversionForm;\nexport default ConversionForm;\nvar _c;\n$RefreshReg$(_c, \"ConversionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Fuse","jsxDEV","_jsxDEV","API_BASE_URL","units","ConversionForm","onConvert","_s","foodList","setFoodList","searchTerm","setSearchTerm","currentIngredient","setCurrentIngredient","amount","setAmount","measurement","setMeasurement","showSuggestions","setShowSuggestions","error","setError","get","then","res","data","catch","err","console","fuse","threshold","distance","suggestions","search","map","result","item","handleIngredientSelect","ingredient","handleConvert","e","preventDefault","response","post","food","quantity","unit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","u","style","color","_c","$RefreshReg$"],"sources":["C:/Users/somis/OneDrive/Documents/Desktop/FOOD/finalfront/src/components/ConversionForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Fuse from \"fuse.js\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\"; \r\nconst units = [\"cup\", \"tablespoon\", \"teaspoon\", \"glass\"];\r\n\r\nconst ConversionForm = ({ onConvert }) => {\r\n  const [foodList, setFoodList] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentIngredient, setCurrentIngredient] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"1\");\r\n  const [measurement, setMeasurement] = useState(\"cup\");\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // ✅ Fetch food list from backend\r\n  useEffect(() => {\r\n    axios.get(`${API_BASE_URL}/foods`)\r\n      .then((res) => setFoodList(res.data))\r\n      .catch((err) => console.error(\"Error fetching foods:\", err));\r\n  }, []);\r\n\r\n  // ✅ Fuzzy search setup\r\n  const fuse = new Fuse(foodList, { threshold: 0.4, distance: 100 });\r\n  const suggestions = searchTerm\r\n    ? fuse.search(searchTerm).map((result) => result.item)\r\n    : [];\r\n\r\n  // ✅ Select food from search suggestions\r\n  const handleIngredientSelect = (ingredient) => {\r\n    setCurrentIngredient(ingredient);\r\n    setSearchTerm(ingredient);\r\n    setShowSuggestions(false);\r\n  };\r\n\r\n  // ✅ Convert measurement request\r\n  const handleConvert = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    if (!currentIngredient || !amount || !measurement) {\r\n      setError(\"Please enter all fields.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/convert`, {\r\n        food: currentIngredient,\r\n        quantity: amount,\r\n        unit: measurement,\r\n      });\r\n\r\n      onConvert(response.data);\r\n    } catch (err) {\r\n      setError(\"Conversion failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ✅ Search Input */}\r\n      <input\r\n        type=\"text\"\r\n        value={searchTerm}\r\n        onChange={(e) => {\r\n          setSearchTerm(e.target.value);\r\n          setShowSuggestions(true);\r\n        }}\r\n        placeholder=\"Search food...\"\r\n      />\r\n      {/* ✅ Show Suggestions */}\r\n      {showSuggestions && suggestions.length > 0 && (\r\n        <ul>\r\n          {suggestions.map((ingredient) => (\r\n            <li key={ingredient} onClick={() => handleIngredientSelect(ingredient)}>\r\n              {ingredient}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {/* ✅ Input Fields */}\r\n      <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} />\r\n      <select value={measurement} onChange={(e) => setMeasurement(e.target.value)}>\r\n        {units.map((u) => <option key={u} value={u}>{u}</option>)}\r\n      </select>\r\n\r\n      {/* ✅ Convert Button */}\r\n      <button onClick={handleConvert}>Convert</button>\r\n\r\n      {/* ✅ Error Handling */}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}